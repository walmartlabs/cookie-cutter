name: Node.js CI

on:
  push:
    branches: [ master, develop ] # TODO: /^release/.*$/
  pull_request:
    branches: [ master, develop ] # TODO: /^release/.*$/
  schedule:
    - cron:  '21 16 * * *'  # TODO: not working at the moment

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Ubuntu Node 10
        uses: actions/setup-node@v2-beta
        with:
          node-version: "10"
      # - name: Install Yarn 1.21.1
      #   run: yarn set version 1.21.1
      # - name: Install Dependencies
      #   run: yarn install --frozen-lockfile
      # - name: Yarn Build
      #   run: yarn build
      # - name: Yarn Lint
      #   run: yarn lint
      # - name: Yarn Test
      #   run: yarn test
      - name: Yarn Audit
        if: ${{ github.event_name == 'schedule' }}
        run: yarn audit

  # test-ubuntu:
  #   needs: smoke
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Ubuntu Node 12
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "12"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Ubuntu Node 12
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Build and Test on Ubuntu Node 12
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build # && yarn test

  # test-macOS:
  #   needs: smoke
  #   runs-on: macOS-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: macOS Node 10
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   env:
  #     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     #   run: |
  #     #         yarn set version 1.21.1
  #     #         yarn install --frozen-lockfile
  #     # - name: Install Dependencies for macOS Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Build and Test on macOS Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build # && yarn test

  test-windows:
    needs: smoke
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
        uses: actions/checkout@v2
        with: # required for git log to access the correct commits
          ref: ${{ github.event.pull_request.head.sha }}
      - run: |
         chcp 65001 #set code page to utf-8
         echo ("BRANCH_NAME=" + "THIS IS THE THING") >> $env:GITHUB_ENV
      - run: echo "${{ env.BRANCH_NAME }}"
      - run: echo $env:BRANCH_NAME
      # - name: Test Windows Env Var 1
      #   shell: bash
      #   run: echo $(git log --format=%B -n 1 ${{ github.event.after }})
      # - name: Test Windows Env Var 2
      #   shell: bash
      #   run: echo "TEST_VAR1=hello" >> %GITHUB_ENV%
      # - name: Test Windows Env Var 3
      #   shell: bash
      #   run: echo TEST_VAR2="hello" >> %GITHUB_ENV%
      # - name: Test Windows Env Var 4
      #   shell: bash
      #   env:
      #     VAR1: ${{ env.TEST_VAR1 }}
      #   run:  echo "VAR1 $VAR1"
      # - name: Test Windows Env Var 5
      #   shell: bash
      #   env:
      #     VAR2: ${{ env.TEST_VAR2 }}
      #   run:  echo "VAR2 $VAR2"
      - name: Get Commit Message
        if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
        run: |
              chcp 65001 #set code page to utf-8
              echo ("COMMIT_MESSAGE=" + $(git log --format=%B -n 1 ${{ github.event.after }})) >> $env:GITHUB_ENV
              echo $env:COMMIT_MESSAGE
      - name: echo env var
        env:
          SOME_NAME: ${{ env.COMMIT_MESSAGE }}
        run: echo "SOME_NAME $SOME_NAME"
      - name: Windows Node 10
        if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: "10"
        env:
          YARN_GPG: no # Windows build agent will hang without this
      # - name: Install Yarn 1.21.1
      #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
      #   run: yarn set version 1.21.1
      # - name: Install Dependencies for Windows Node 10
      #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
      #   run: yarn install --frozen-lockfile
      # - name: Build and Test on Windows Node 10
      #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
      #   run: yarn build # && yarn test

  # integration-azure:
  #   needs: test-ubuntu
  #   # needs: [test-ubuntu, test-macOS, test-windows]
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "set COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Windows Node 10
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Windows Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Run Test
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   env:
  #     #     YARN_GPG: no # Windows build agent will hang without this
  #     #     NODE_TLS_REJECT_UNAUTHORIZED: "0"
  #     #     COSMOS_SECRET_KEY: "C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="
  #     #     AZURE_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;"
  #     #     AZURE_STORAGE_ACCESS_KEY: "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
  #     #     AZURE_STORAGE_ACCOUNT: "devstoreaccount1"
  #     #     AZURE_STORAGE_URL: "http://127.0.0.1:10000/devstoreaccount1"
  #     #     RUNNING_IN_CI: "1"
  #     #   run:  |
  #     #         PowerShell -c "Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine"
  #     #         PowerShell -File packages/azure/start_emulators.ps1
  #     #         PowerShell -File packages/azure/run_integration_tests.ps1

  # integration-mssql:
  #   needs: test-ubuntu
  #   # needs: [test-ubuntu, test-macOS, test-windows]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Windows Node 10
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Windows Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Run Test
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build && cd packages/mssql && yarn integrate

  # integration-amqp:
  #   needs: test-ubuntu
  #   # needs: [test-ubuntu, test-macOS, test-windows]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Windows Node 10
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Windows Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Run Test
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build && cd packages/amqp && yarn integrate

  # integration-kafka:
  #   needs: test-ubuntu
  #   # needs: [test-ubuntu, test-macOS, test-windows]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Windows Node 10
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Windows Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Run Test
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build && cd packages/kafka && yarn integrate

  # integration-prometheus:
  #   needs: test-ubuntu
  #   # needs: [test-ubuntu, test-macOS, test-windows]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Windows Node 10
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Windows Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Run Test
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build && cd packages/prometheus && yarn integrate

  # integration-s3:
  #   needs: test-ubuntu
  #   # needs: [test-ubuntu, test-macOS, test-windows]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Windows Node 10
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Windows Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Run Test
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build && cd packages/s3 && yarn integrate

  # integration-redis:
  #   needs: test-ubuntu
  #   # needs: [test-ubuntu, test-macOS, test-windows]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with: # required for git log to access the correct commits
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get Commit Message
  #       if: ${{ github.event_name == 'schedule' || github.event_name == 'pull_request' }}
  #       run: echo "COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
  #     - name: Windows Node 10
  #       if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: "10"
  #     # - name: Install Yarn 1.21.1
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn set version 1.21.1
  #     # - name: Install Dependencies for Windows Node 10
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn install --frozen-lockfile
  #     # - name: Run Test
  #     #   if: ${{ github.event_name == 'schedule' || ( github.event_name == 'pull_request' && ( github.base_ref == 'master' || contains(env.COMMIT_MESSAGE, '[full ci]') || contains(env.COMMIT_MESSAGE, '[full-ci]') ) ) }}
  #     #   run: yarn build && cd packages/redis && yarn integrate
